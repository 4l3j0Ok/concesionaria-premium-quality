---
import Layout from "../layouts/Layout.astro";
import { getCar } from "../lib/cars";
import { mapCarFromAPI, type Car } from "../types/car";
import CarGrid from "../components/CarGrid.astro";
import Contact from "../components/Contact";
import Stats from "../components/Stats.astro";
import { Icon } from "astro-icon/components";

// Obtener todos los autos
let cars: Car[] = [];

try {
  const carsResponse = await getCar();
  if (carsResponse && Array.isArray(carsResponse.items)) {
    cars = carsResponse.items.map(mapCarFromAPI);
  }
} catch (error) {
  console.error("Error fetching cars from API:", error);
  cars = [];
}

// Filtrar solo las ofertas (cars con promotion_price)
const offerCars = cars.filter(
  (car) => car.promotionPrice && car.promotionPrice < car.price,
);

// Calcular estadísticas
const averageDiscount =
  offerCars.length > 0
    ? Math.round(
        (offerCars.reduce(
          (acc, car) =>
            acc + ((car.price - (car.promotionPrice || 0)) / car.price) * 100,
          0,
        ) /
          offerCars.length) *
          10,
      ) / 10
    : 0;

const offerStats = [
  {
    number: offerCars.length,
    label: "Ofertas activas",
  },
  {
    number: `${averageDiscount}%`,
    label: "Descuento promedio",
  },
];
---

<Layout>
  <main>
    <section class="offers-header">
      <div class="offers-badge">
        <Icon name="mdi:tag-multiple" />
        <span>OFERTAS ESPECIALES</span>
      </div>
      <h1>Aprovecha Nuestras Mejores Ofertas</h1>
      <p class="subtitle">
        Vehículos seleccionados con descuentos exclusivos por tiempo limitado
      </p>
      <Stats stats={offerStats} />
    </section>

    <CarGrid cars={offerCars} showOnlyOffers={true} />

    <section class="cta-section">
      <h2>¿No encontraste lo que buscabas?</h2>
      <p>Explora todo nuestro catálogo de vehículos disponibles</p>
      <a href="/catalog">
        <button class="catalog-button">Ver Catálogo Completo</button>
      </a>
    </section>

    <Contact client:load />
  </main>
</Layout>

<style>
  main {
    background-color: white;
    display: flex;
    flex-direction: column;
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
    width: 80%;
    padding: 2em;
    padding-bottom: 5em;
    margin-bottom: 5em;
    margin-top: 2em;
  }

  .offers-header {
    text-align: center;
    margin-bottom: 2em;
  }

  .offers-badge {
    display: inline-flex;
    align-items: center;
    gap: 0.5em;
    background: linear-gradient(
      135deg,
      var(--accent-color),
      var(--accent-color-dark)
    );
    color: white;
    padding: 0.5em 1.5em;
    border-radius: 2em;
    font-weight: bold;
    margin-bottom: 1em;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .offers-badge [data-icon] {
    font-size: 1.5em;
  }

  .offers-header h1 {
    font-size: 2.5rem;
    color: var(--primary-color);
    margin-bottom: 0.5em;
  }

  .subtitle {
    font-size: 1.2rem;
    color: #666;
    margin-bottom: 2em;
  }

  .cta-section {
    text-align: center;
    padding: 3em 2em;
    background-color: var(--background-color);
    border-radius: var(--border-radius);
    margin: 3em 0 2em 0;
  }

  .cta-section h2 {
    color: var(--primary-color);
    margin-bottom: 0.5em;
  }

  .cta-section p {
    color: #666;
    margin-bottom: 1.5em;
    font-size: 1.1rem;
  }

  .catalog-button {
    background-color: var(--primary-color);
    color: white;
    border: none;
    padding: 1em 2em;
    font-size: 1.1rem;
    font-weight: bold;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .catalog-button:hover {
    background-color: var(--primary-color-dark);
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
  }

  @media (max-width: 768px) {
    main {
      width: 95%;
      padding: 1em;
    }

    .offers-header h1 {
      font-size: 2rem;
    }

    .subtitle {
      font-size: 1rem;
    }

    .cta-section {
      padding: 2em 1em;
    }
  }
</style>
